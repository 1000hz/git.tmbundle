<%    
  filepath_right = diff_result[:right][:filepath]
  start_line_right = diff_result[:right][:ln_start]
  
  open_links = {}
  files = [:left, :right].map do |lr|
    filepath = diff_result[lr][:filepath]
    next "(none)" unless filepath
    
    side_revision = case
      when revision.blank? && lr == :right
        nil
      when revision.blank? && lr == :left
        "HEAD"
      when revision
        lr == :left ? "#{revision}^" : revision
    end
    open_links[lr] = link_to_remote(lr, :params => { :controller => "log", :action => "open_revision", :filepath => filepath, :revision => side_revision, :line => diff_result[lr][:ln_start], :git_path => git.path })
    
    filepath_right ? link_to_textmate(git.root_relative_path_for(filepath), git.path_for(filepath_right), start_line_right) : git.root_relative_path_for(filepath)
  end
%>

<h4><%= files.uniq * ' --&gt; ' %></h4>
<table class='codediff inline'>
  <thead>
    <tr>
      <td class='line-numbers'><%= open_links[:left] %></td>
      <td class='line-numbers'><%= open_links[:right] %></td>
      <td/>
    </tr>
  </thead>
  <tbody>
    <% diff_result[:lines].each do |line|
      next if @diff_line_count >= Git::DEFAULT_DIFF_LIMIT
      @diff_line_count += 1
      line_num_class, row_class = case line[:type]
        when :deletion then ["", "del"]
        when :insertion then ["", "ins"]
        when :eof then ["line-num-eof", "eof"]
        when :cut then ["line-num-cut", "cut-line"]
        else
          ["", "unchanged"]
      end
      %>
        <tr>
          <td class="line-numbers <%= line_num_class %>"><%= line[:ln_left] %></td>
          <td class="line-numbers <%= line_num_class %>"><%= line[:ln_right] %></td>
          <td class="code <%= row_class %>"><%= htmlize(line[:text]) %></td></tr>
    <% end %>
  </tbody>
</table>
